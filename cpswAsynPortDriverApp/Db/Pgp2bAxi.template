record(ao, "$(DEVICE):CountReset")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0) CountReset")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ao, "$(DEVICE):ResetRx")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0) ResetRx")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ao, "$(DEVICE):Flush")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0) Flush")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ao, "$(DEVICE):Loopback")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0) Loopback")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ao, "$(DEVICE):LocData")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0) LocData")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ao, "$(DEVICE):AutoStatus")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0) AutoStatus")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):Status")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) Status")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxPhyReady")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxPhyReady")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):TxPhyReady")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) TxPhyReady")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxLocalLinkReady")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxLocalLinkReady")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxRemLinkReady")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxRemLinkReady")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):TxLinkReady")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) TxLinkReady")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxLinkPolarity")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxLinkPolarity")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxRemPause")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxRemPause")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):TxLocPause")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) TxLocPause")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxRemOverflow")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxRemOverflow")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):TxLocOverflow")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) TxLocOverflow")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxRemLinkData")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxRemLinkData")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxCellErrorCount")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxCellErrorCount")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxLinkDownCount")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxLinkDownCount")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxLinkErrorCount")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxLinkErrorCount")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxRemOverflow0Count")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxRemOverflow0Count")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxRemOverflow1Count")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxRemOverflow1Count")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxRemOverflow2Count")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxRemOverflow2Count")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxRemOverflow3Count")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxRemOverflow3Count")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxFrameErrorCount")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxFrameErrorCount")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxFrameCount")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxFrameCount")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):TxLocOverflow0Count")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) TxLocOverflow0Count")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):TxLocOverflow1Count")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) TxLocOverflow1Count")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):TxLocOverflow2Count")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) TxLocOverflow2Count")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):TxLocOverflow3Count")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) TxLocOverflow3Count")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):TxFrameErrorCount")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) TxFrameErrorCount")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):TxFrameCount")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) TxFrameCount")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxClkFreq")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxClkFreq")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):TxClkFreq")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) TxClkFreq")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):TxOpCodeStatus")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) TxOpCodeStatus")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):LastTxOpCode")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) LastTxOpCode")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxOpCodeStatus")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxOpCodeStatus")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):LastRxOpCode")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) LastRxOpCode")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):TxOpCodeCount")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) TxOpCodeCount")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ai, "$(DEVICE):RxOpCodeCount")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),0) RxOpCodeCount")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}

record(ao, "$(DEVICE):C_ResetRx")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0) C_ResetRx")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}
record(ao, "$(DEVICE):C_Flush")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),0) C_Flush")
    field(SCAN, "Passive")
    info(asyn:READBACK, "1")
}

