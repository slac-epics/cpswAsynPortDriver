record(ai, "TEST:Temperature")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) Temperature")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccInt")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccInt")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccAux")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccAux")
    field(SCAN, "Passive")
}
record(ai, "TEST:Vin")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) Vin")
    field(SCAN, "Passive")
}
record(ai, "TEST:VrefP")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VrefP")
    field(SCAN, "Passive")
}
record(ai, "TEST:VrefN")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VrefN")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccBram")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccBram")
    field(SCAN, "Passive")
}
record(ai, "TEST:SupplyOffsetA")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) SupplyOffsetA")
    field(SCAN, "Passive")
}
record(ai, "TEST:AdcOffsetA")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) AdcOffsetA")
    field(SCAN, "Passive")
}
record(ai, "TEST:AdcGainA")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) AdcGainA")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccpInt")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccpInt")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccpAux")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccpAux")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccpDdr")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccpDdr")
    field(SCAN, "Passive")
}
record(ai, "TEST:VinAux00")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VinAux00")
    field(SCAN, "Passive")
}
record(ai, "TEST:VinAux01")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VinAux01")
    field(SCAN, "Passive")
}
record(ai, "TEST:VinAux02")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VinAux02")
    field(SCAN, "Passive")
}
record(ai, "TEST:VinAux03")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VinAux03")
    field(SCAN, "Passive")
}
record(ai, "TEST:VinAux04")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VinAux04")
    field(SCAN, "Passive")
}
record(ai, "TEST:VinAux05")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VinAux05")
    field(SCAN, "Passive")
}
record(ai, "TEST:VinAux06")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VinAux06")
    field(SCAN, "Passive")
}
record(ai, "TEST:VinAux07")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VinAux07")
    field(SCAN, "Passive")
}
record(ai, "TEST:VinAux08")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VinAux08")
    field(SCAN, "Passive")
}
record(ai, "TEST:VinAux09")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VinAux09")
    field(SCAN, "Passive")
}
record(ai, "TEST:VinAux10")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VinAux10")
    field(SCAN, "Passive")
}
record(ai, "TEST:VinAux11")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VinAux11")
    field(SCAN, "Passive")
}
record(ai, "TEST:VinAux12")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VinAux12")
    field(SCAN, "Passive")
}
record(ai, "TEST:VinAux13")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VinAux13")
    field(SCAN, "Passive")
}
record(ai, "TEST:VinAux14")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VinAux14")
    field(SCAN, "Passive")
}
record(ai, "TEST:VinAux15")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VinAux15")
    field(SCAN, "Passive")
}
record(ai, "TEST:TemperatureMax")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) TemperatureMax")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccIntMax")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccIntMax")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccAuxMax")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccAuxMax")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccBramMax")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccBramMax")
    field(SCAN, "Passive")
}
record(ai, "TEST:TemperatureMin")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) TemperatureMin")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccIntMin")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccIntMin")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccAuxMin")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccAuxMin")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccBramMin")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccBramMin")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccpIntMax")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccpIntMax")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccpAuxMax")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccpAuxMax")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccpDdrMax")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccpDdrMax")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccpIntMin")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccpIntMin")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccpAuxMin")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccpAuxMin")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccpDdrMin")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccpDdrMin")
    field(SCAN, "Passive")
}
record(ai, "TEST:Flag")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) Flag")
    field(SCAN, "Passive")
}
record(ai, "TEST:VccpIntMax")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiXadc,0) VccpIntMax")
    field(SCAN, "Passive")
}
record(ai, "TEST:FpgaVersion")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiVersion,0) FpgaVersion")
    field(SCAN, "Passive")
}
record(ai, "TEST:ScratchPad")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiVersion,0) ScratchPad")
    field(SCAN, "Passive")
}
record(ai, "TEST:DeviceDnaHigh")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiVersion,0) DeviceDnaHigh")
    field(SCAN, "Passive")
}
record(ai, "TEST:DeviceDnaLow")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiVersion,0) DeviceDnaLow")
    field(SCAN, "Passive")
}
record(ai, "TEST:FdSerialHigh")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiVersion,0) FdSerialHigh")
    field(SCAN, "Passive")
}
record(ai, "TEST:FdSerialLow")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiVersion,0) FdSerialLow")
    field(SCAN, "Passive")
}
record(ai, "TEST:MasterReset")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiVersion,0) MasterReset")
    field(SCAN, "Passive")
}
record(ai, "TEST:FpgaReload")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiVersion,0) FpgaReload")
    field(SCAN, "Passive")
}
record(ai, "TEST:FpgaReloadAddress")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiVersion,0) FpgaReloadAddress")
    field(SCAN, "Passive")
}
record(ai, "TEST:Counter")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiVersion,0) Counter")
    field(SCAN, "Passive")
}
record(ai, "TEST:FpgaReloadHalt")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiVersion,0) FpgaReloadHalt")
    field(SCAN, "Passive")
}
record(ai, "TEST:UserConstants")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiVersion,0) UserConstants")
    field(SCAN, "Passive")
}
record(ai, "TEST:BuildStamp")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn(AxiVersion,0) BuildStamp")
    field(SCAN, "Passive")
}
